* 8.5.7 - Fixed issues with version number. 
* 8.5.6 - Update to testing and support. There were no code changes.
          Updated to add Ubuntu 25.10. 
* 8.5.5 - Bump version number to correct error in README.rst
* 8.5.4 - Update to testing and support. There were no code changes.
          Numerous testing targets have been updated to their latest
          version. Support for 32 bits on x86 is now deprecated as
          Debian have dropped mainstream support for it and there are
          no longer any major Linux distros offering it in current versions.
          Support for Python versions older than 3.11 is now deprecated.
          No code changes have been made yet to remove support for these
          features, but they may be removed in a future release.
* 8.5.3 - Update to testing and support. There were no code changes.
          Changes were made to unit testing and benchmark support
          scripts to support a new testing environment.
          Python support was updated to 3.13 on Windows OS.
* 8.5.2 - Update to testing and support. There were no code changes. 
          Python version on Windows 10 and 11 was updated to version 3.12.
* 8.5.1 - Update to testing and support. There were no code. changes. 
          Ubuntu version updated to 23.04. AlmaLinux updated to 9.1. 
          Alpine Linux updated to 3.17.3. FreeBSD updated to 13.2. 
          OpenBSD updated to 7.3. 
          On Ubuntu 23.04, the installation method has changed due to how 
          PEP-668 was implemented by Debian and how this affects "pip". 
          Some other distros may experience the same problems if they made 
          the same changes. See the README.TxT for details. 
* 8.5.0 - Added pyproject.toml file to satisfy Python 3.11 requirements.
          Updated build scripts to use python3 -m build instead of calling
          setup.py directly. Test targets were updated, Ubuntu 20.04 was 
          dropped, Ubuntu 22.10 was added, FreeBSD python version upgraded 
          to 3.9, OpenBSD upgraded to 7.2, Windows 10 Python upgraded to 3.11,
          Windows 11 Python upgraded to 3.11. Removed duplicate assignment in
          parameter parsing return data in arrayparams_asum.c. 
          Added __version__ attribute to allow checking package version 
          number at run time. Added version unit test. Updated setup.py 
          and other files to allow the version number to be automatically 
          updated from a single source at build time.
* 8.4.1 - Minor bug fix for asum for unsigned integer SIMD on ARM. This 
          corrects the function return type for SIMD operations on ARM.
          No incorrect behaviour was found in the original, but this change
          was made to ensure correctness. 
* 8.4.0 - Major performance improvements for asum through the use of SIMD and
          other optimizations. 
* 8.3.0 - Fixed the effects of an apparent compiler bug affecting 32 bit 
          x86 only for function asum. Tested and verified on 32 bit Debian 
          and 32 bit Alpine. This would in a few very specific circumstances 
          result in the sum of a float array (array code 'f') exceeding 
          the valid range for a float instead of returning infinity. The
          fix forces the result to infinity in these cases. Also tested
          with new releases of Alma 9 and Alpine 3.16. 
* 8.2.0 - Update to testing and support. Tested with new releases of Ubuntu 
          22.04 and OpenBSD 7.1. Changed "simdsupport" to also report the 
          architecture the binary was compiled for. "Simdsupport" is only
          used for testing and benchmarking and is not a stable part of
          the release.
* 8.1.2 - Bump to correct minor documentation error in README.rst. 
* 8.1.1 - Update to testing and support. Raspberry Pi 32 bit OS updated to
          version 2022-04-04. Update to setup.py to improve ARM version 
          detection.
* 8.1.0 - Update to testing and support. Centos has been replaced by 
          AlmaLinux due to Red Hat ending long term support for Centos.
          No actual code changes.
* 8.0.1 - Technical bump to version number to include update information.
* 8.0.0 - Performance improvements in add, sub, mul, neg, abs, ceil, floor, 
          trunc, sqrt, degrees, radians. Asum will now use error checking 
          with floating point SIMD by default where available. Benchmarks
          and unit tests have been updated accordingly.
* 7.2.0 - Performance improvements in asum and pow. Asum will now use error
          checking with floating point SIMD on x86_64 by default. Pow has
          special cases for powers of 2 and 3 on integer arrays which allow
          for much greater performance. Pow will now raise a value error
          exception if an attempt to raise to a negative number. This makes it
          it more compatible with Python. New functions pow2 and pow3 added
          which raise array values to powers of 2 and 3 respectively. These
          have additional optimisations beyond pow, particularly with floating
          point arrays. Benchmarks for add, floordiv, mod, mul, pow, sub, and
          truediv have been changed to make them run the expanded range of
          tests much faster. 
* 7.1.0 - This is a bugfix release to correct mod, mul, and pow. This affects
          integer overflow checking at extremes, particularly with the greatest
          magnitude negative number on signed arrays. Certain combinations of
          numbers may have produced an overflow error when the result was at 
          the negative margin of the numeric range (e.g. -128 for array type
          'b' when -2 is raised to the power of 7). The errors have been fixed,
          including adding special cases. Also, when 1 or -1 was raised to a
          very large power this would cause the algorithm to work for a very
          long time to produce an answer (e.g. 1 to the power of 4 billion).
          This is now detected and a special case added to short circuit the
          calculation to produce the answer. The unit tests for these and 
          related functions have been updated to include a much wider range 
          of test data.
* 7.0.0 - Major speed improvements to add, sub, mul, abs, neg using SIMD with 
          overflow checking on integer array types. SIMD is now active as the 
          default on integer arrays with smaller word sizes for these 
          functions. Major speed improvements on x86 for lshift and rshift by
          adding SIMD support to addition integer array types. This was already
          present on ARM. Added benchmark for "convert" (this was missing). 
          Debian test platforms were updated to latest versions (11). 
* 6.2.0 - Updated benchmarks to make each one a separate file. Centos and
          OpenSuse test platforms updated to latest versions.
* 6.1.1 - Documentation updated and version number bumped to reflect testing 
          with Ubuntu 21.04, FreeBSD 13.0, and OpenBSD 6.9. No code changes.
* 6.1.0 - Changed convguardbands to narrow -ve guard bands by 1 to handle 
          LLVM warning. Changed setup.py to detect Raspberry Pi 4 and set the 
          compiler args accordingly. Added support for Pi 4. Dropped testing 
          of 64 bit mode on Pi 3. 
* 6.0.1 - Documentation updated to reflect testing with the release version
          of Ubuntu 20.04 ARM (Rasberry Pi), Ubuntu 2010 (x86-64), OpenBSD 6.8,
          and Python 3.9 on Windows. No code changes and no change in version 
          number.
* 6.0.0 - Documentation updated to reflect testing with the release version
          of Ubuntu 20.04. No code changes and no change in version number.
* 6.0.0 - Added SIMD support for ARMv8 AARCH64. This is 64 bit ARM on a
          Raspberry Pi3 when running 64 bit Ubuntu. Raspbian is 32 bit only
          and has 64 bit SIMD vectors. 64 bit ARM has 128 bit SIMD vectors
          and so offers improved performance.
* 5.1.1 - Updated and improved help documentation. Also updated test
          platforms and retested.
* 5.1.0 - This is a bug fix release only, centred around SIMD issues on
          x86-64 with GCC. In a previous release some of the x86-64 SIMD 
          code had been changed to take advantage of a sort of assisted
          auto-vectorisation present in GCC. However, certain operations
          on certain integer sizes with certain array types will cause 
          GCC to generate incorrect x86 SIMD operations, producting 
          integer overflow. The functions known to be affected are aall, 
          aany, findindex (B, H, I arrays), eq, ge, gt, le, lt, ne (B, 
          H, I arrays), and rshift (h, i arrays). ARM was not affected. 
          All auto-vectorisation, where used, has been changed back to 
          manually generated SIMD operations for both x86 and ARM. 
          Rshift no longer uses SIMD  operations for b, B, h, or i 
          arrays on x86. Lshift no longer  supports SIMD operations on 
          b or B arrays on x86. Add and sub no longer use SIMD for B, H,
          and I arrays on x86. Mul no longer uses SIMD on x86 for any
          array types. Where SIMD functionality has been removed on x86, 
          it of course is still supported through normal portable CPU 
          instructions. ARM SIMD support was not affected by these
          changes. Lost SIMD acceleration will be returned to x86 in a
          later release where possible after the necessary research has
          been conducted. Unit tests have been updated to cover a 
          greater range of integer values to test for this problem. 
          Platforms using compilers other than GCC were not affected by 
          this, as they did not use SIMD anyway. The main effect of this
          present change is that some calculations may be slower for
          some array types. The problem with GCC generating incorrect
          SIMD instructions in some circumstances is apparently a known 
          (but obscure) issue. This will be avoided in future releases
          by sticking with manual SIMD built-ins. Some source code files 
          have updated date stamps in this release but no substantive 
          code changes due to the template system used to auto-generate 
          code.
* 5.0.0 - The main focus of this release has been adding SIMD 
          acceleration support to the ARMv7 platform  (e.g. Raspberry 
          Pi 3). Also added SIMD support to 'lshift' and 'rshift' on
          x86-64 and ARM. Changed arrayparamsbase to fix compiler 
          warning on newer versions of GCC, but no change in actual
          operation. Updated supported OS versions tested, and added
          OpenBSD to supported platform list.
* 4.3.1 - Numerous performance inprovements through the use of SIMD
          acceleration in many functions. See the documentation to
          see which functions are affected. Restrictions on the use of 
          non-finite data in parameters has been relaxed where possible. 
          Repeat now allows non-finite data as fill values. For 
          findindices, if no matches are found the result code is now 
          0 (zero) instead of -1.
* 4.2.0 - Added fma function. This has no equivalent in the Python 
          standard library but is equivalent to x * y + z. Also changed
          list of supported platforms to update FreeBSD to version 12
          and added Centos 7.
* 4.1.0 - Added isfinite function.
* 4.0.1 - Repeat upload to synchronise source and Windows binary "wheel"
          version. PyPI was not happy with the previous attempt. 
* 4.0.0 - Major revision with many changes. Amap, starmap, and acalc were 
          replaced with new individual functions. This change was made to 
          provides a simpler and more consistent interface which is tailored to
          the individual function rather than attempting to make one parameter 
          format fit all. The "disovfl" parameter has been named to "matherrors" 
          in order to better reflect that it encompasses more than just integer
          overflow. Support for the "bytes" type has been removed. The Raspberry
          Pi has been added as a supported platform.
* 3.1.0 - Added log2 to amap, amapi, and acalc.
* 3.0.0 - Changed package format to "Wheel" files. No functional changes.
* 2.1.1 - Fixed missing header files in PyPI package. No functional changes.
* 2.0.0 - Many changes. Updated MS Windows support to 3.6 and latest compiler.
          This in turn brought the Windows version up to feature parity with
          the other versions. Changed supported MS Windows version from 32 bit
          to 64 bit. Added SIMD support for some functions which provided a 
          significant performance for those affected. Updated supported versions
          of Debian and FreeBSD to current releases.
* 1.1.0 - Added support for math constants math.pi and math.e.
* 1.0.0 - First release.

